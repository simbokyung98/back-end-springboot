{"version":3,"file":"js/menu07.629df4ab.js","mappings":"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","sources":["webpack://font-end-vue/./node_modules/js-file-download/file-download.js","webpack://font-end-vue/./src/apis/board.js","webpack://font-end-vue/./src/components/menu02/ModelDialogTemplate.vue","webpack://font-end-vue/./src/components/menu02/ModelDialogTemplate.vue?1f9b","webpack://font-end-vue/./src/components/menu07/AlertDialog.vue","webpack://font-end-vue/./src/views/menu07/Exam01AsyncControl.vue","webpack://font-end-vue/./src/views/menu07/Exam01AsyncControl.vue?f41b","webpack://font-end-vue/./src/views/menu07/auth/Join.vue","webpack://font-end-vue/./src/views/menu07/auth/Join.vue?8402","webpack://font-end-vue/./src/views/menu07/auth/Login.vue","webpack://font-end-vue/./src/views/menu07/auth/Login.vue?70bd","webpack://font-end-vue/./src/views/menu07/board/List.vue","webpack://font-end-vue/./src/views/menu07/board/List.vue?5f9a","webpack://font-end-vue/./src/views/menu07/board/Read.vue","webpack://font-end-vue/./src/views/menu07/board/Read.vue?a213","webpack://font-end-vue/./src/views/menu07/board/UpdateForm.vue","webpack://font-end-vue/./src/views/menu07/board/UpdateForm.vue?f0df","webpack://font-end-vue/./src/views/menu07/board/WriteForm.vue","webpack://font-end-vue/./src/views/menu07/board/WriteForm.vue?b13f"],"sourcesContent":["module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n","import axios from \"axios\";\r\nimport apiAuth from \"@/apis/auth\";\r\n\r\n//게시물 목록\r\nasync function getBoardList(pageNo = 1) {\r\n  let response = null;\r\n  try {\r\n    response = await axios.get(\"/board/list\", { params: { pageNo: pageNo } }); //쿼리스트링 방식으로 넘어감\r\n    return { result: \"success\", data: response.data };\r\n  } catch (error) {\r\n    console.log(error);\r\n    if (error.response) {\r\n      //서버 응답이 존재\r\n      if (error.response.status === 403) {\r\n          console.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");\r\n        if (await apiAuth.refreshToken()) {\r\n         //재귀 호출을 할 경우 비동기 중복이 되므로 하단처럼 작성하는 것이 더 좋음\r\n          response = await axios.get(\"/board/list\", { params: { pageNo: pageNo } }); //쿼리스트링 방식으로 넘어감\r\n          return { result: \"success\", data: response.data };\r\n        }\r\n      }\r\n    } else {\r\n      //서버 응답이 존재하지 않음[ 네트워크 오류 ]\r\n      return { result: \"fail-network\" };\r\n    }\r\n  }\r\n  if (response != null) {\r\n    return response.data; //리턴된 json이 data에 생성됨\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n//게시물 쓰기(멀티 파트로 구성해서 전달)\r\n// async 를 쓰면 내부가 자체가 비동기 방식으로 실행되기 때문에 내부에서 까지 비동기 방식으로 진행 할 필요가 없다\r\n//그러므로 axios의 비동기 방식을 동기 방식으로 변경하는 await를 사용한다\r\nasync function createBoard(multipartFormData) {\r\n  let dbBoard = null;\r\n  try {\r\n    const response = await axios.post(\"/board/\", multipartFormData);\r\n    dbBoard = response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n        //서버 응답이 존재\r\n        if (error.response.status === 403) {\r\n            console.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");\r\n          if (await apiAuth.refreshToken()) {\r\n           //재귀 호출을 할 경우 비동기 중복이 되므로 하단처럼 작성하는 것이 더 좋음\r\n           const response = await axios.post(\"/board/\", multipartFormData);\r\n           dbBoard = response.data;\r\n          }\r\n        }\r\n      }\r\n}\r\n}\r\n\r\n\r\n//게시물 가져오기\r\nasync function readBoard(bno, hit) {\r\n  let board = null;\r\n  try {\r\n    const response = await axios.get(`/board/${bno}?hit=${hit}`);\r\n    board = response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n        //서버 응답이 존재\r\n        if (error.response.status === 403) {\r\n            console.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");\r\n          if (await apiAuth.refreshToken()) {\r\n            const response = await axios.get(`/board/${bno}?hit=${hit}`);\r\n            board = response.data;\r\n          }\r\n        }\r\n      }\r\n  }\r\n  return board;\r\n}\r\n\r\n//파일 다운로드\r\nasync function downloadBoardAttach(bno) {\r\n  let blob = null;\r\n  try {\r\n    //다운로드 받을 방식이 blob 이라고 지정해야 response.data에 blob을 지정할 수 있음\r\n    const response = await axios.get(`/board/battach/${bno}`, { responseType: \"blob\" });\r\n    blob = response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n        //서버 응답이 존재\r\n        if (error.response.status === 403) {\r\n            console.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");\r\n          if (await apiAuth.refreshToken()) {\r\n            const response = await axios.get(`/board/battach/${bno}`, { responseType: \"blob\" });\r\n            blob = response.data;\r\n          }\r\n        }\r\n      }\r\n }\r\n  \r\n  return blob;\r\n}\r\n\r\n//게시물 삭제\r\nasync function deleteBoard(bno) {\r\n  let result = null;\r\n  try {\r\n    const response = await axios.delete(`/board/${bno}`);\r\n    result = response.data.result;\r\n  } catch (error) {\r\n    if (error.response) {\r\n        //서버 응답이 존재\r\n        if (error.response.status === 403) {\r\n            console.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");\r\n          if (await apiAuth.refreshToken()) {\r\n           //재귀 호출을 할 경우 비동기 중복이 되므로 하단처럼 작성하는 것이 더 좋음\r\n           const response = await axios.delete(`/board/${bno}`);\r\n           result = response.data.result;\r\n          }\r\n        }\r\n      }\r\n  }\r\n  return result;\r\n}\r\n\r\n//boardUpdate\r\nasync function updateBoard(multipartFormData) {\r\n  let dbBoard = null;\r\n  try {\r\n    const response = await axios.put(`/board/`, multipartFormData);\r\n    dbBoard = response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n        //서버 응답이 존재\r\n        if (error.response.status === 403) {\r\n            console.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");\r\n          if (await apiAuth.refreshToken()) {\r\n           //재귀 호출을 할 경우 비동기 중복이 되므로 하단처럼 작성하는 것이 더 좋음\r\n           const response = await axios.put(`/board/`, multipartFormData);\r\n           dbBoard = response.data;\r\n          }\r\n        }\r\n      }\r\n  }\r\n  return dbBoard;\r\n}\r\n//내보내기\r\nexport default {\r\n  getBoardList: getBoardList,\r\n  createBoard: createBoard,\r\n  readBoard: readBoard,\r\n  downloadBoardAttach: downloadBoardAttach,\r\n  deleteBoard: deleteBoard,\r\n  updateBoard: updateBoard,\r\n};\r\n","<template>\r\n  <Transition name=\"modal\">\r\n    <div class=\"modal-mask\">\r\n      <div class=\"modal-wrapper\">\r\n        <div class=\"modal-container\" :style=\"$attrs.style\">\r\n          <div class=\"modal-header\">\r\n            <!-- Slot -->\r\n            <slot name=\"header\">default header</slot>\r\n          </div>\r\n\r\n          <div class=\"modal-body\">\r\n            <!-- Slot -->\r\n            <slot name=\"body\">default body</slot>\r\n          </div>\r\n\r\n          <div class=\"modal-footer\">\r\n            <!-- Slot -->\r\n            <slot name=\"footer\">\r\n              default footer\r\n              <button class=\"modal-default-button\" @click=\"$emit('close')\">OK</button>\r\n            </slot>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </Transition>\r\n</template>\r\n\r\n<script>\r\n  //해당 컴포넌트 루트 상속시 내부 요소에 루트 class, id, to 등 반영 안함\r\n  export default{\r\n    inheritAttrs: false,\r\n  };\r\n</script>\r\n\r\n<script setup></script>\r\n\r\n<style >\r\n.modal-mask {\r\n  position: fixed;\r\n  z-index: 9998;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: table;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.modal-wrapper {\r\n  display: table-cell;\r\n  vertical-align: middle;\r\n}\r\n\r\n.modal-container {\r\n  width: 300px;\r\n  margin: 0px auto;\r\n  padding: 20px 30px;\r\n  background-color: #fff;\r\n  border-radius: 2px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.modal-header h3 {\r\n  margin-top: 0;\r\n  color: #42b983;\r\n}\r\n\r\n.modal-body {\r\n  margin: 20px 0;\r\n}\r\n\r\n.modal-default-button {\r\n  float: right;\r\n}\r\n\r\n/*\r\n * The following styles are auto-applied to elements with\r\n * transition=\"modal\" when their visibility is toggled\r\n * by Vue.js.\r\n *\r\n * You can easily play with the modal transition by editing\r\n * these styles.\r\n */\r\n\r\n.modal-enter-from {\r\n  opacity: 0;\r\n}\r\n\r\n.modal-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.modal-enter-from .modal-container,\r\n.modal-leave-to .modal-container {\r\n  -webkit-transform: scale(1.1);\r\n  transform: scale(1.1);\r\n}\r\n</style>\r\n","import { render } from \"./ModelDialogTemplate.vue?vue&type=template&id=1e6673cc\"\nimport script from \"./ModelDialogTemplate.vue?vue&type=script&lang=js\"\nexport * from \"./ModelDialogTemplate.vue?vue&type=script&lang=js\"\n\nimport \"./ModelDialogTemplate.vue?vue&type=style&index=0&id=1e6673cc&lang=css\"\n\nimport exportComponent from \"C:\\\\osstem\\\\projects\\\\node-workspace\\\\font-end-vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import script from \"./AlertDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AlertDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">Exam01AsyncControl</div>\r\n    <div class=\"card-body\">\r\n      <div>\r\n        <button @click=\"handleBtn1\" class=\"btn btn-info btn-sm mr-2\">비동기 작업1</button>\r\n        <button @click=\"handleBtn2\" class=\"btn btn-info btn-sm mr-2\">비동기 작업2</button>\r\n      </div>\r\n\r\n      <div v-if=\"!loading\" class=\"mt-3\">\r\n        <div>result : {{ result }}</div>\r\n      </div>\r\n\r\n      <div v-if=\"loading\" class=\"spinner-border text-info mt-3\" role=\"status\">\r\n        <span class=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\n\r\nconst result = ref(\"\");\r\nconst loading = ref(false);\r\n\r\nfunction handleBtn1() {\r\n  loading.value = true;\r\n  work()\r\n    .then((data) => {\r\n      result.value = data;\r\n    })\r\n    .catch((error) => {})\r\n    .finally(() => {\r\n      loading.value = false;\r\n    });\r\n}\r\n\r\nasync function handleBtn2() {\r\n  try {\r\n    loading.value = true;\r\n     const data = await work();\r\n     result.value = data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n}\r\n\r\nfunction work() {\r\n  const promise = new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve(\"value\");\r\n    }, 3000);\r\n  });\r\n  return promise;\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Exam01AsyncControl.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam01AsyncControl.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">Join</div>\r\n    <div class=\"card-body\">\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label\">User ID</label>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"user.id\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label\">User Name</label>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"user.name\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-form-label\">User Password</label>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"user.password\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-form-label\">User Role</label>\r\n        <select class=\"form-control\" name=\"mrole\" v-model=\"user.role\">\r\n          <option value=\"ROLE_ADMIN\">ROLE_ADMIN</option>\r\n          <option value=\"ROLE_MANAGER\">ROLE_MANAGER</option>\r\n          <option value=\"ROLE_USER\" selected>ROLE_USER</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-form-label\">User Email</label>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"user.email\" />\r\n      </div>\r\n      <button class=\"btn btn-info btn-sm\" v-on:click=\"handleJoin\">가입</button>\r\n    </div>\r\n\r\n    <AlertDialog v-if=\"alertDialog\" :message=\"alertDialogMessage\" :loading=\"loading\" @close=\"alertDialog=false\"/>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n    import {reactive, ref} from \"vue\";\r\n    import apiAuth from \"@/apis/auth\";\r\n    import AlertDialog from \"@/components/menu07/AlertDialog.vue\";\r\n\r\n    const alertDialog = ref(false);\r\n    const alertDialogMessage = ref(\"\");\r\n    const loading = ref(false);\r\n\r\n    const user = reactive({\r\n        id : \"user\",\r\n        name :\"사용자\",\r\n        password : \"12345\",\r\n        role : \"ROLE_USER\",\r\n        email : \"user@mycompany.com\"\r\n    });\r\n\r\n    async function handleJoin(){\r\n        alertDialog.value = true;\r\n        loading.value = true;\r\n        const result = await apiAuth.join(user);\r\n        if(result ===\"success\"){\r\n          alertDialogMessage.value = \"회원가입 성공\";\r\n          \r\n        }else if(result === \"duplicated\"){\r\n            alertDialogMessage.value = \"회원가입 실패 : 아이디 중복\";\r\n        }else if(result === \"fail\"){\r\n           alertDialogMessage.value = \"회원가입 실패 : 서버측 오류\";\r\n        }else{\r\n           alertDialogMessage.value = \"회원가입 실패 : 네트워크 오류\";\r\n        }\r\n        loading.value = false;\r\n    }\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Join.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Join.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">Login</div>\r\n    <div class=\"card-body\">\r\n      <div v-if=\"store.state.userId === ''\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">User ID</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"userId\" v-model=\"user.id\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"userPassword\" class=\"col-form-label\">User Password</label>\r\n          <input type=\"text\" class=\"form-control\" v-model=\"user.password\" />\r\n        </div>\r\n        <button class=\"btn btn-info btn-sm\" v-on:click=\"handleLogin\">로그인</button>\r\n      </div>\r\n      <div v-if=\"store.state.userId !== ''\">\r\n        <button class=\"btn btn-info btn-sm mr-2\" v-on:click=\"handleLogout\">로그아웃</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <AlertDialog v-if=\"alertDialog\" :message=\"alertDialogMessage\" :loading=\"loading\" @close=\"alertDialog = false\"></AlertDialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {reactive, ref} from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport apiAuth from \"@/apis/auth\";\r\n\r\nimport AlertDialog from \"@/components/menu07/AlertDialog.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nconst store = useStore();\r\nconst router = useRouter();\r\n\r\nconst alertDialog = ref(false);\r\nconst alertDialogMessage = ref(\"\");\r\nconst loading = ref(false);\r\n\r\nconst user = reactive({\r\n    id:\"user\",\r\n    password:\"12345\"\r\n});\r\n\r\nasync function handleLogin(){\r\n    alertDialog.value = true;\r\n    loading.value = true;\r\n\r\n    const result = await apiAuth.login(user);\r\n    if(result === \"success\"){\r\n       alertDialog.value = false;\r\n       // router.push(\"/\");\r\n    }else if(result === \"fail-401\"){\r\n         alertDialogMessage.value = \"로그인 실패 : 아이디 또는 패스워드가 틀림\";\r\n    }else{\r\n         alertDialogMessage.value = \"로그인 실패 : 네트워크 오류\";\r\n    }\r\n    loading.value = false;\r\n}\r\n\r\nasync function handleLogout(){\r\n  await apiAuth.logout();\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Login.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Login.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">List</div>\r\n    <!-- setup에 getBoardList 실행 한 후 onmunted 시점에 dom을 해석하지만 getBoardList이 비동기 통신을 하기 떄문에 onmounted 가 먼저 올 수 있다 -->\r\n    <!-- null인 상태에서도 화면에 에러가 나지 않게 v-if 처리해줘야함 -->\r\n    <div class=\"card-body\">\r\n      <div v-if=\"page != null\">\r\n        <div class=\"mb-3\">\r\n          <router-link to=\"/menu07/board/writeform\" class=\"btn btn-info btn-sm\">생성</router-link>\r\n        </div>\r\n        <table class=\"table table-sm table-striped table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th class=\"text-center\" style=\"width: 70px\">번호</th>\r\n              <th class=\"text-center\">제목</th>\r\n              <th class=\"text-center\" style=\"width: 90px\">글쓴이</th>\r\n              <th class=\"text-center\" style=\"width: 120px\">날짜</th>\r\n              <th class=\"text-center\" style=\"width: 70px\">조회수</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"board in page.boards\" v-bind:key=\"board.bno\">\r\n              <td class=\"text-center\">{{board.bno}}</td>\r\n              <td>\r\n                <router-link :to=\"`/menu07/board/read?bno=${board.bno}&pageNo=${page.pager.pageNo}&hit=true`\">{{board.btitle}}</router-link>\r\n              </td>\r\n              <td class=\"text-center\">{{board.min}}</td>\r\n              <td class=\"text-center\">{{new Date(board.bdate).toLocaleDateString()}}</td>\r\n              <td class=\"text-center\">{{board.bhitcount}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td colspan=\"5\" class=\"text-center\">\r\n                <button @click=\"changePageNo(1)\" class=\"btn btn-outline-primary btn-sm mr-1\">처음</button>\r\n                <button v-if=\"page.pager.groupNo > 1\" @click=\"changePageNo(page.pager.startPageNo-1)\" class=\"btn btn-outline-info btn-sm mr-1\">이전</button>\r\n                <!-- <button v-for=\"pageNo in range(page.pager.startPageNo, page.pager.endPageNo)\" :key=\"pageNo\" \r\n                         @click=\"changePageNo(pageNo)\"\r\n                         class=\"btn btn-outline-success btn-sm mr-1\"\r\n                         :class=\"{'btn-outline-success':(page.pager.pageNo = pageNo), 'btn-danger':(page.pager.pageNo == pageNo)}\">{{pageNo}}</button> -->\r\n                <button v-for=\"pageNo in range(page.pager.startPageNo, page.pager.endPageNo)\" :key=\"pageNo\" \r\n                         @click=\"changePageNo(pageNo)\"\r\n                         class=\"btn btn-outline-success btn-sm mr-1\"\r\n                         :class=\"(page.pager.pageNo == pageNo)?'btn-danger' :'btn-outline-success'\">{{pageNo}}</button>         \r\n                <button v-if=\"page.pager.groupNo < page.pager.totalGroupNo\"  @click=\"changePageNo(page.pager.endPageNo+1)\" class=\"btn btn-outline-info btn-sm mr-1\">다음</button>\r\n                <button @click=\"changePageNo(page.pager.totalPageNo)\" class=\"btn btn-outline-primary btn-sm mr-1\">맨끝</button>\r\n\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport apiBoard from \"@/apis/board\";\r\nimport { ref, watch } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\n\r\n\r\n\r\n//반응형 속성 선언\r\nconst page = ref(null);\r\nconst route = useRoute();\r\nconst router = new useRouter();\r\n\r\n//List setup 시 로그인 되었는지 확인\r\nconst store = useStore();\r\nif(store.state.userId === \"\"){\r\n router.push(\"/menu07/auth/login\");\r\n}\r\n\r\n//라우팅 시에 전달될 QueryString에서 pageNo를 읽기\r\nlet pageNo = route.query.pageNo;\r\nif (pageNo === \"undefined\") {\r\n  //정의 되지 않았을 때 기본값\r\n  pageNo = 1;\r\n}\r\n\r\n//Rest API와 통신해서 페이지에 대한 정보(게시물 목록, 페이저) 를 page 라는 반응형 속성에 저장\r\nasync function getBoardList(pageNo) {\r\n  const result = await apiBoard.getBoardList(pageNo);\r\n  \r\n  //api에서 로그인이 되었는지 확인한 결과를 result로 리턴\r\n  if (result.result===\"success\") {//로그인 된 경우\r\n    page.value = result.data;\r\n  }else{//인증 안된경우\r\n    router.push(\"/menu07/auth/login\");\r\n  }\r\n}\r\n\r\ngetBoardList(pageNo);\r\n\r\nfunction range(start, end){\r\n  const numbers = [];\r\n  for(var i=start;i<=end;i++){\r\n    numbers.push(i);\r\n  }\r\n  return numbers;\r\n}\r\n\r\n//해당 페이지에 맞는 라우터로 변경\r\nfunction changePageNo(pageNo){\r\n  router.push(`/menu07/board/list?pageNo=${pageNo}`);\r\n}\r\n\r\nwatch(route, (newUrl, oldUrl) => {\r\n  if(newUrl.path == \"/menu07/board/list\"){\r\n    if(newUrl.query.pageNo){\r\n      getBoardList(newUrl.query.pageNo);\r\n    }else{\r\n      getBoardList(1);\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./List.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./List.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">Read</div>\r\n    <div class=\"card-body\">\r\n      <div v-if=\"board != null\">\r\n        <div class=\"d-flex\">\r\n          <div>\r\n            <p>bno : {{ board.bno }}</p>\r\n            <p>btitle : {{ board.btitle }}</p>\r\n            <p>bcontent : {{ board.bcontent }}</p>\r\n            <p>mid : {{ board.mid }}</p>\r\n            <p>bdate : {{ new Date(board.bdate).toLocaleDateString() }}</p>\r\n            <p>bhitcount : {{ board.bhitcount }}</p>\r\n            <p v-if=\"board.battachoname != null\">\r\n              battachoname : {{ board.battachoname }}\r\n              <button @click=\"downloadBattach\" class=\"btn btn-info btn-sm ml-2\">다운로드</button>\r\n            </p>\r\n          </div>\r\n          <div class=\"ml-5\" v-if=\"board.battachoname != null\">\r\n            <img :src=\"battach\" width=\"300\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <router-link :to=\"`/menu07/board/list?pageNo=${pageNo}`\" \r\n            class=\"btn btn-info btn-sm mr-2\">목록</router-link>\r\n          <router-link :to=\"`/menu07/board/updateform?bno=${$route.query.bno}&pageNo=${$route.query.pageNo}`\" class=\"btn btn-info btn-sm mr-2\">\r\n            수정\r\n          </router-link>\r\n          <button class=\"btn btn-info btn-sm mr-2\" @click=\"handleRemove\">삭제</button> \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport apiBoard from \"@/apis/board\";\r\nimport { ref } from \"vue\";\r\n\r\n//npm install js-file-download\r\nimport fileDownload from \"js-file-download\";\r\n\r\nconst router = useRouter();\r\nconst route = useRoute();\r\nconst bno = route.query.bno;\r\nconst pageNo = route.query.pageNo;\r\nconst hit = route.query.hit;\r\nconst board = ref(null);\r\nconst battach = ref(null);\r\n\r\n\r\n//이미지 보여주기\r\nasync function getBoard() {\r\n  /*const dbBoard = await apiBoard.readBoard(bno, hit);\r\n    board.value = dbBoard;*/\r\n\r\n  //속도 개선\r\n  apiBoard.readBoard(bno, hit).then((data) => {\r\n    board.value = data;\r\n  });\r\n\r\n  const blob = await apiBoard.downloadBoardAttach(bno);\r\n  if (blob != null) {\r\n    //blob 타입 가져오는 방식 : 그냥 가져오면 안되고 메모리에 있는 것을 url로 생성하여 바인딩해야 사용 가능\r\n    battach.value = URL.createObjectURL(blob);\r\n  }\r\n}\r\ngetBoard();\r\n\r\n//파일 다운로드\r\nasync function downloadBattach() {\r\n  const blob = await apiBoard.downloadBoardAttach(bno);\r\n  if (blob != null) {\r\n    fileDownload(blob, board.value.battachoname);\r\n  }\r\n}\r\n\r\n//삭제\r\nasync function handleRemove(){\r\n    const result = await apiBoard.deleteBoard(bno);\r\n    if(result === \"success\"){\r\n        router.push(`/menu07/board/list?pageNo=${pageNo}`);\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Read.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Read.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">WriteForm</div>\r\n    <div class=\"card-body\">\r\n      <!-- v-on:submit.prevent=\"handleAdd -> 제출 기능 끄고 해당 메소드 실행 -->\r\n      <form v-if=\"board\" v-on:submit.prevent=\"handleUpdate\">\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">제목</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"board.btitle\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">내용</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"board.bcontent\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">첨부그림</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"file\" class=\"form-control-file\" ref=\"newBattach\" @change=\"previewImg\" />\r\n          </div>\r\n          <div v-if=\"board.battachoname != null\">\r\n            <img :src=\"battach\" width=\"200\">\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12 d-flex justify-content-center\">\r\n            <input type=\"submit\" class=\"btn btn-primary btn-sm mr-2\" value=\"추가\" />\r\n            <input type=\"button\" class=\"btn btn-primary btn-sm\" value=\"취소\" v-on:click=\"handleCancel\" />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref} from \"vue\";\r\nimport {useRoute, useRouter} from \"vue-router\";\r\nimport apiBoard from \"@/apis/board\";\r\n\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\n\r\nconst board = ref(null);\r\n\r\n//파일의 존재와 이름을 알고 바이너리 데이터 형식으로 가져오기 위하여 ref 를 사용함\r\nconst newBattach = ref(null);//새로운 파일\r\nconst battach = ref(null);//이전 파일\r\n\r\n\r\nconst bno = route.query.bno;\r\nconst pageNo = route.query.pageNo;\r\n\r\n//해당 메소드가 비동기로 가져오기 떄문에 form에 값이 존재하지 x ->  null일 때 보여주지 않기 위해 v-if를 사용한다\r\nasync function getBoard(){\r\n  const dbBoard = await apiBoard.readBoard(bno, false);\r\n  board.value = dbBoard;\r\n\r\n  //파일이 존재하는지 확인하여 있다면 출력\r\n  const blob = await apiBoard.downloadBoardAttach(bno);\r\n  if(blob != null){\r\n    battach.value = URL.createObjectURL(blob);\r\n  }\r\n}\r\ngetBoard();\r\n\r\n//update 제출용 함수\r\nasync function handleUpdate(){\r\n   const multipartFormData = new FormData();\r\n  multipartFormData.append(\"btitle\", board.value.btitle);\r\n  multipartFormData.append(\"bcontent\", board.value.bcontent);\r\n  multipartFormData.append(\"bno\", board.value.bno);\r\n  \r\n  //첨부파일 전달\r\n  //battach 은 ref 이기 때문에 이 자제로 참조객체임 그러므로 value 써야함\r\n  //files는 여러개 파일 지정할 수 있기 때문에 붙음 [태그에 multiple 사용해야함]\r\n  if(newBattach.value.files.length != 0){\r\n    multipartFormData.append(\"battach\", newBattach.value.files[0]);\r\n  }\r\n  //createBoard은 2가지 방식으로 리턴됨 -> null이나 해당 객체 리턴\r\n  await apiBoard.updateBoard(multipartFormData);\r\n   router.push(`/menu07/board/read?bno=${bno}&pageNo=${pageNo}&hit=false`);              \r\n}\r\n\r\n//취소하면 read 페이지로 넘어감\r\nasync function handleCancel(){\r\n  router.push(`/menu07/board/read?bno=${bno}&pageNo=${pageNo}&hit=false`);\r\n}\r\n\r\n//이미지를 변경하면 하단 이미지 url을 변경해줌\r\nfunction previewImg(){\r\n  if(newBattach.value.files.length != 0){\r\n    battach.value = URL.createObjectURL(newBattach.value.files[0]);\r\n  }else{\r\n    battach.value = null;\r\n  }\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./UpdateForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">WriteForm</div>\r\n    <div class=\"card-body\">\r\n      <!-- v-on:submit.prevent=\"handleAdd -> 제출 기능 끄고 해당 메소드 실행 -->\r\n      <form v-on:submit.prevent=\"handleAdd\">\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">제목</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"board.btitle\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">내용</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"board.bcontent\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">첨부그림</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"file\" class=\"form-control-file\" ref=\"battach\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12 d-flex justify-content-center\">\r\n            <input type=\"submit\" class=\"btn btn-primary btn-sm mr-2\" value=\"추가\" />\r\n            <input type=\"button\" class=\"btn btn-primary btn-sm\" value=\"취소\" v-on:click=\"handleCancel\" />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {reactive, ref} from \"vue\";\r\nimport {useRouter} from 'vue-router';\r\nimport apiboard from \"@/apis/board\";\r\nconst router = new useRouter();\r\nconst board = reactive({\r\n    btitle : \"\",\r\n    bcontent:\"\"\r\n});\r\n//이미지 \r\nconst battach = ref(null);\r\n\r\nasync function handleAdd() {\r\n  const multipartFormData = new FormData();\r\n  multipartFormData.append(\"btitle\", board.btitle);\r\n  multipartFormData.append(\"bcontent\", board.bcontent);\r\n  multipartFormData.append(\"mid\", \"user\");\r\n  \r\n  //첨부파일 전달\r\n  //battach 은 ref 이기 때문에 이 자제로 참조객체임 그러므로 value 써야함\r\n  //files는 여러개 파일 지정할 수 있기 때문에 붙음 [태그에 multiple 사용해야함]\r\n  if(battach.value.files.length != 0){\r\n    multipartFormData.append(\"battach\", battach.value.files[0]);\r\n  }\r\n  //createBoard은 2가지 방식으로 리턴됨 -> null이나 해당 객체 리턴\r\n  await apiboard.createBoard(multipartFormData);\r\n  router.push(\"/menu07/board/list\"); \r\n}\r\n\r\nfunction handleCancel(){\r\n    router.push(\"/menu07/board/list\");\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./WriteForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./WriteForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["module","exports","data","filename","mime","bom","blobData","blob","Blob","type","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","async","getBoardList","pageNo","response","axios","params","result","error","console","log","status","apiAuth","createBoard","multipartFormData","dbBoard","readBoard","bno","hit","board","downloadBoardAttach","responseType","deleteBoard","updateBoard","class","_createBlock","_Transition","name","_createElementVNode","_ctx","_renderSlot","onClick","inheritAttrs","__exports__","render","ref","loading","handleBtn1","value","work","then","catch","finally","handleBtn2","promise","Promise","resolve","reject","alertDialog","alertDialogMessage","user","reactive","id","password","role","email","handleJoin","store","useStore","useRouter","handleLogin","handleLogout","page","route","useRoute","router","state","userId","push","query","apiBoard","range","start","end","numbers","i","changePageNo","watch","newUrl","oldUrl","path","battach","getBoard","downloadBattach","fileDownload","battachoname","handleRemove","newBattach","handleUpdate","FormData","append","btitle","bcontent","files","length","handleCancel","previewImg","handleAdd","apiboard"],"sourceRoot":""}