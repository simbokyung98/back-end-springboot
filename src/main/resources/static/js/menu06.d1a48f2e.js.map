{"version":3,"file":"js/menu06.d1a48f2e.js","mappings":"mgBA6BA,MAAMA,GAAQC,EAAAA,EAAAA,MAEd,SAASC,IACP,OAAOF,EAAMG,MAAMC,OAIrB,MAAMC,GAAiBC,EAAAA,EAAAA,KAAS,IACxBN,EAAMG,MAAMC,SAGdA,GAASG,EAAAA,EAAAA,IAAI,IAGnB,SAASC,IACPR,EAAMS,OAAO,YAAYL,EAAOM,OAIlC,SAASC,IACPX,EAAMY,SAAS,mBAAoB,CAACR,OAAOA,EAAOM,MAAOG,SAAS,M,i7BC9CpE,MAAMC,EAAc,EAEpB,S,8aCuBA,MAAMd,GAAQC,EAAAA,EAAAA,MAEd,SAASc,IACL,OAAOf,EAAMG,MAAMa,QAAQC,MAO/B,MAAMC,GAAgBZ,EAAAA,EAAAA,KAAS,IACpBN,EAAMmB,QAAQ,sBAGnBT,GAAQH,EAAAA,EAAAA,IAAI,GAGlB,SAASa,IAELpB,EAAMS,OAAO,mBAAoBC,EAAMA,OAI3C,SAASW,IACLrB,EAAMY,SAAS,0BAA4B,CAACF,MAAMA,EAAMA,MAAOG,SAAS,M,2gCCjD5E,MAAMC,EAAc,EAEpB","sources":["webpack://font-end-vue/./src/views/menu06/Exam01RootState.vue","webpack://font-end-vue/./src/views/menu06/Exam01RootState.vue?67d7","webpack://font-end-vue/./src/views/menu06/Exam02CounterState.vue","webpack://font-end-vue/./src/views/menu06/Exam02CounterState.vue?779f"],"sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n        Exam01RootState\r\n    </div>\r\n    <div class=\"card-body\">\r\n        <div>\r\n            <h6>[Root State 읽기]</h6>\r\n            <p>userId 단방향 바인딩 : {{$store.state.userId}}</p> <!--$store.state -> state에 접근하겠다 -->\r\n            <p>userId 단방향 바인딩 : {{store.state.userId}}</p>\r\n            <p>userId 단방향 바인딩 : {{store.getters.getUserId}}</p>\r\n            <p>userId 단방향 바인딩 : {{getUserId()}}</p>\r\n            <p>userId 단방향 바인딩 : {{computedUserId}}</p>\r\n            <p>userId 양방향 바인딩 : <input type=\"text\" v-model=\"$store.state.userId\"></p>\r\n        </div>\r\n        <hr/>\r\n        <h6>[Root State 변경]</h6>\r\n        <p>userId 변경값 입력 : <input type=\"text\" v-model=\"userId\"></p> \r\n        <div>\r\n          <button @click=\"changeUserIdByMutation\" class=\"btn btn-info btn-sm mr-2\">userId 변경(Mutation 동기 방식)</button>\r\n          <button @click=\"changeUserIdByAction\" class=\"btn btn-info btn-sm mr-2\">userId 변경(Action 비동기 방식)</button>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useStore } from 'vuex';\r\nimport { computed, ref } from \"vue\";\r\nconst store = useStore();\r\n\r\nfunction getUserId(){\r\n  return store.state.userId;\r\n  //return store.getters.getUserId;\r\n}\r\n\r\nconst computedUserId = computed(() => {\r\n return store.state.userId;\r\n});\r\n\r\nconst userId = ref(\"\");\r\n\r\n//동기방식 변경\r\nfunction changeUserIdByMutation(){\r\n  store.commit(\"setUserId\",userId.value);\r\n}\r\n\r\n//비동기 방식 변경\r\nfunction changeUserIdByAction(){\r\n  store.dispatch(\"setUserIdByAsync\", {userId:userId.value, duration:3000})\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Exam01RootState.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam01RootState.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">Exam02CounterState</div>\r\n    <div class=\"card-body\">\r\n        <div>\r\n            <h6>[Counter State 읽기]</h6>\r\n            <p>counter/count 단방향 바인딩 : {{$store.state.counter.count}}</p> <!--$store.state -> state에 접근하겠다 -->\r\n            <p>counter/count 단방향 바인딩 : {{store.state.counter.count}}</p>\r\n            <p>counter/count 단방향 바인딩 : {{store.getters[\"counter/getCount\"]}}</p>\r\n            <p>counter/count 단방향 바인딩 : {{getCount()}}</p>\r\n            <p>counter/count 단방향 바인딩 : {{computedCount}}</p>\r\n            <p>counter/count 양방향 바인딩 : <input type=\"text\" v-model=\"$store.state.counter.count\"></p> \r\n        </div>\r\n         <hr/>\r\n        <h6>[Counter State 변경]</h6>\r\n        <p>count 증가값 입력 : <input type=\"text\" v-model.number=\"value\"></p> \r\n        <div>\r\n          <button @click=\"changeCountByMutation\" class=\"btn btn-info btn-sm mr-2\">count 변경(Mutation 동기 방식)</button>\r\n          <button @click=\"changeCountByAction\" class=\"btn btn-info btn-sm mr-2\">count 변경(Action 비동기 방식)</button>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useStore } from 'vuex';\r\nimport {computed, ref} from \"vue\";\r\n\r\nconst store = useStore();\r\n\r\nfunction getCount(){\r\n    return store.state.counter.count;\r\n    //return store.getters[\"counter/getCount\"];\r\n}\r\n\r\n//LifeCycle에서 update라는 상태가 있는데 컴포넌트의 \r\n//속성이 변경되면 기본 메소드는 다시 템플릿 변경될 때마다 실행되지만 \r\n//계산된 속성은 내부 value 변경 시에만 실행됨\r\nconst computedCount = computed(() => {\r\n    return store.getters[\"counter/getCount\"];\r\n});\r\n\r\nconst value = ref(1);\r\n\r\n//동기 방식\r\nfunction changeCountByMutation(){\r\n                // namespace 는 호출할 때 \r\n    store.commit(\"counter/setCount\", value.value);\r\n}\r\n\r\n//비동기 방식\r\nfunction changeCountByAction(){\r\n    store.dispatch(\"counter/setCountByAsync\",  {value:value.value, duration:3000});\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Exam02CounterState.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam02CounterState.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useStore","getUserId","state","userId","computedUserId","computed","ref","changeUserIdByMutation","commit","value","changeUserIdByAction","dispatch","duration","__exports__","getCount","counter","count","computedCount","getters","changeCountByMutation","changeCountByAction"],"sourceRoot":""}